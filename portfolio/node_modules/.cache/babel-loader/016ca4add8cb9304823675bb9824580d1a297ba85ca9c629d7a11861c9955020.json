{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/skillItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Treebeard } from \"react-treebeard\";\nimport { skills } from \"../data\"; // Import categorized skills\nimport skillIcons from \"./skillIcons\"; // Map skill names to icons\n\n// Convert skills data to a tree structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateTree = () => {\n  return {\n    name: \"My Tech Stack\",\n    toggled: true,\n    children: Object.keys(skills).map(category => ({\n      name: category,\n      children: skills[category].map(skill => ({\n        name: skill.name,\n        icon: skillIcons[skill.name] || null\n      }))\n    }))\n  };\n};\nexport default function SkillTree() {\n  _s();\n  const [treeData, setTreeData] = useState(generateTree());\n\n  // Handle node toggle (expand/collapse)\n  const onToggle = (node, toggled) => {\n    node.toggled = toggled;\n    setTreeData({\n      ...treeData\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 p-6 rounded-xl mx-auto max-w-2xl\",\n    children: /*#__PURE__*/_jsxDEV(Treebeard, {\n      data: treeData,\n      onToggle: onToggle,\n      style: {\n        tree: {\n          base: {\n            backgroundColor: \"transparent\"\n          }\n        },\n        node: {\n          base: {\n            color: \"#fff\",\n            fontSize: \"1rem\"\n          },\n          activeLink: {\n            color: \"#4CAF50\"\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(SkillTree, \"sQezwhn/NJUhLDTirzlK1aZMzHA=\");\n_c = SkillTree;\nvar _c;\n$RefreshReg$(_c, \"SkillTree\");","map":{"version":3,"names":["React","useState","Treebeard","skills","skillIcons","jsxDEV","_jsxDEV","generateTree","name","toggled","children","Object","keys","map","category","skill","icon","SkillTree","_s","treeData","setTreeData","onToggle","node","className","data","style","tree","base","backgroundColor","color","fontSize","activeLink","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/skillItem.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Treebeard } from \"react-treebeard\";\nimport { skills } from \"../data\"; // Import categorized skills\nimport skillIcons from \"./skillIcons\"; // Map skill names to icons\n\n\n// Convert skills data to a tree structure\nconst generateTree = () => {\n  return {\n    name: \"My Tech Stack\",\n    toggled: true,\n    children: Object.keys(skills).map((category) => ({\n      name: category,\n      children: skills[category].map((skill) => ({\n        name: skill.name,\n        icon: skillIcons[skill.name] || null,\n      })),\n    })),\n  };\n};\n\nexport default function SkillTree() {\n  const [treeData, setTreeData] = useState(generateTree());\n\n  // Handle node toggle (expand/collapse)\n  const onToggle = (node, toggled) => {\n    node.toggled = toggled;\n    setTreeData({ ...treeData });\n  };\n\n  return (\n    <div className=\"bg-gray-800 p-6 rounded-xl mx-auto max-w-2xl\">\n      <Treebeard\n        data={treeData}\n        onToggle={onToggle}\n        style={{\n          tree: { base: { backgroundColor: \"transparent\" } },\n          node: {\n            base: { color: \"#fff\", fontSize: \"1rem\" },\n            activeLink: { color: \"#4CAF50\" },\n          },\n        }}\n      />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,MAAM,QAAQ,SAAS,CAAC,CAAC;AAClC,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;;AAGvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAO;IACLC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAEC,MAAM,CAACC,IAAI,CAACT,MAAM,CAAC,CAACU,GAAG,CAAEC,QAAQ,KAAM;MAC/CN,IAAI,EAAEM,QAAQ;MACdJ,QAAQ,EAAEP,MAAM,CAACW,QAAQ,CAAC,CAACD,GAAG,CAAEE,KAAK,KAAM;QACzCP,IAAI,EAAEO,KAAK,CAACP,IAAI;QAChBQ,IAAI,EAAEZ,UAAU,CAACW,KAAK,CAACP,IAAI,CAAC,IAAI;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED,eAAe,SAASS,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAACM,YAAY,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMc,QAAQ,GAAGA,CAACC,IAAI,EAAEb,OAAO,KAAK;IAClCa,IAAI,CAACb,OAAO,GAAGA,OAAO;IACtBW,WAAW,CAAC;MAAE,GAAGD;IAAS,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEb,OAAA;IAAKiB,SAAS,EAAC,8CAA8C;IAAAb,QAAA,eAC3DJ,OAAA,CAACJ,SAAS;MACRsB,IAAI,EAAEL,QAAS;MACfE,QAAQ,EAAEA,QAAS;MACnBI,KAAK,EAAE;QACLC,IAAI,EAAE;UAAEC,IAAI,EAAE;YAAEC,eAAe,EAAE;UAAc;QAAE,CAAC;QAClDN,IAAI,EAAE;UACJK,IAAI,EAAE;YAAEE,KAAK,EAAE,MAAM;YAAEC,QAAQ,EAAE;UAAO,CAAC;UACzCC,UAAU,EAAE;YAAEF,KAAK,EAAE;UAAU;QACjC;MACF;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CAxBuBD,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}