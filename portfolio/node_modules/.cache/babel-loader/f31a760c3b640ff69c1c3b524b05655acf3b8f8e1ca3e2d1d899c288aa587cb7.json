{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\"; // ✅ Import styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const eventSourceRef = useRef(null); // ✅ Store EventSource reference\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setStreamingResponse(\"\");\n\n    // ✅ Ensure previous EventSource is closed before creating a new one\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n    try {\n      eventSourceRef.current = new EventSource(`http://localhost:8000/chat?message=${encodeURIComponent(input)}`);\n      eventSourceRef.current.onmessage = event => {\n        setStreamingResponse(prev => prev + event.data);\n      };\n      eventSourceRef.current.onerror = () => {\n        eventSourceRef.current.close();\n      };\n      eventSourceRef.current.onclose = () => {\n        setMessages(prev => [...prev, {\n          role: \"bot\",\n          content: streamingResponse\n        }]);\n      };\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setInput(\"\");\n  };\n\n  // ✅ Function to Clear Everything\n  const clearMessages = () => {\n    setMessages([]); // ✅ Clear messages\n    setStreamingResponse(\"\"); // ✅ Clear streaming text\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close(); // ✅ Close any active event stream\n      eventSourceRef.current = null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-4 text-center\",\n      children: \"Ask me anything!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role === \"user\" ? \"user-message\" : \"bot-message\",\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message\",\n        children: streamingResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask me anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear\",\n        onClick: clearMessages,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"imlhSic06tUbN27sIr4uq5ID6yw=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","streamingResponse","setStreamingResponse","eventSourceRef","sendMessage","trim","userMessage","role","content","prev","current","close","EventSource","encodeURIComponent","onmessage","event","data","onerror","onclose","error","console","clearMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\"; // ✅ Import styles\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const eventSourceRef = useRef(null); // ✅ Store EventSource reference\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: \"user\", content: input };\n    setMessages((prev) => [...prev, userMessage]);\n    setStreamingResponse(\"\");\n\n    // ✅ Ensure previous EventSource is closed before creating a new one\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n\n    try {\n        eventSourceRef.current = new EventSource(`http://localhost:8000/chat?message=${encodeURIComponent(input)}`);\n\n\n      eventSourceRef.current.onmessage = (event) => {\n        setStreamingResponse((prev) => prev + event.data);\n      };\n\n      eventSourceRef.current.onerror = () => {\n        eventSourceRef.current.close();\n      };\n\n      eventSourceRef.current.onclose = () => {\n        setMessages((prev) => [...prev, { role: \"bot\", content: streamingResponse }]);\n      };\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n\n    setInput(\"\");\n  };\n\n  // ✅ Function to Clear Everything\n  const clearMessages = () => {\n    setMessages([]); // ✅ Clear messages\n    setStreamingResponse(\"\"); // ✅ Clear streaming text\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close(); // ✅ Close any active event stream\n      eventSourceRef.current = null;\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Ask me anything!</h2>\n      <div className=\"chatbox\">\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.role === \"user\" ? \"user-message\" : \"bot-message\"}>\n            {msg.content}\n          </div>\n        ))}\n        {streamingResponse && <div className=\"bot-message\">{streamingResponse}</div>}\n      </div>\n\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Ask me anything...\"\n        />\n        <button className=\"send\" onClick={sendMessage}>Send</button>\n        <button className=\"clear\" onClick={clearMessages}>Clear</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}