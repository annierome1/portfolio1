{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    // ✅ Add user message to chat history\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setStreamingResponse(\"\"); // ✅ Reset streaming text\n\n    try {\n      const eventSource = new EventSource(`http://localhost:8000/chat?message=${encodeURIComponent(input)}`);\n      eventSource.onmessage = event => {\n        setStreamingResponse(prev => prev + event.data); // ✅ Append each chunk\n      };\n      eventSource.onerror = error => {\n        console.error(\"Error streaming chat response:\", error);\n        eventSource.close();\n      };\n      eventSource.onclose = () => {\n        setMessages(prev => [...prev, {\n          role: \"bot\",\n          content: streamingResponse\n        }]); // ✅ Finalize response\n      };\n    } catch (error) {\n      console.error(\"Error communicating with chatbot:\", error);\n    }\n    setInput(\"\"); // ✅ Clear input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role === \"user\" ? \"user-message\" : \"bot-message\",\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message\",\n        children: [streamingResponse, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask me anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"Nprcui9Gntyt1kVMC/7JbtWhhNI=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","streamingResponse","setStreamingResponse","sendMessage","trim","userMessage","role","content","prev","eventSource","EventSource","encodeURIComponent","onmessage","event","data","onerror","error","console","close","onclose","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './chatbot.css'\n\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    // ✅ Add user message to chat history\n    const userMessage = { role: \"user\", content: input };\n    setMessages((prev) => [...prev, userMessage]);\n    setStreamingResponse(\"\"); // ✅ Reset streaming text\n\n    try {\n      const eventSource = new EventSource(`http://localhost:8000/chat?message=${encodeURIComponent(input)}`);\n\n      eventSource.onmessage = (event) => {\n        setStreamingResponse((prev) => prev + event.data); // ✅ Append each chunk\n      };\n\n      eventSource.onerror = (error) => {\n        console.error(\"Error streaming chat response:\", error);\n        eventSource.close();\n      };\n\n      eventSource.onclose = () => {\n        setMessages((prev) => [...prev, { role: \"bot\", content: streamingResponse }]); // ✅ Finalize response\n      };\n\n    } catch (error) {\n      console.error(\"Error communicating with chatbot:\", error);\n    }\n\n    setInput(\"\"); // ✅ Clear input field\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chatbox\">\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.role === \"user\" ? \"user-message\" : \"bot-message\"}>\n            {msg.content}\n          </div>\n        ))}\n        {streamingResponse && (\n          <div className=\"bot-message\">\n            {streamingResponse} {/* ✅ Show streaming response in real-time */}\n          </div>\n        )}\n      </div>\n\n      {/* ✅ Chat Input & Buttons */}\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Ask me anything...\"\n        />\n        <button onClick={sendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}