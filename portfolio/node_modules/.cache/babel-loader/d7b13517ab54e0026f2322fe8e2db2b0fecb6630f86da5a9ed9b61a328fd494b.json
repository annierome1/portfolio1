{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const eventSourceRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    // ... (your existing message-sending logic)\n  };\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const clearMessages = () => {\n    setMessages([]);\n    setStreamingResponse(\"\");\n    setIsTyping(false);\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-wrapper\",\n    style: {\n      width: \"350px\",\n      position: \"relative\"\n    } // Ensure wrapper is positioned normally\n    ,\n    children: [!isOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: () => setIsOpen(true),\n      style: {\n        display: \"block\",\n        width: \"100%\",\n        marginBottom: \"10px\",\n        position: \"static\" // Remove absolute positioning\n      },\n      children: \"\\uD83D\\uDCAC Chat with me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container show-chat\",\n      style: {\n        width: \"350px\",\n        height: \"500px\",\n        background: \"white\",\n        borderRadius: \"15px\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.2)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\",\n        transition: \"all 0.3s ease-in-out\",\n        position: \"static\" // Ensure this follows normal flow\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chat with me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setIsOpen(false),\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        ref: chatContainerRef,\n        style: {\n          flex: 1,\n          overflowY: \"auto\",\n          padding: \"10px\"\n        },\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.role === \"user\" ? \"user-message\" : \"bot-message\",\n          children: msg.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-message\",\n          children: streamingResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        style: {\n          display: \"flex\",\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Ask me anything...\",\n          style: {\n            flex: 1,\n            marginRight: \"5px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear\",\n          onClick: clearMessages,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"RuJkqxRPDQMYYAWEvQB6bG5qxIs=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","isOpen","setIsOpen","streamingResponse","setStreamingResponse","eventSourceRef","chatContainerRef","sendMessage","trim","current","scrollTop","scrollHeight","clearMessages","close","className","style","width","position","children","onClick","display","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","height","background","borderRadius","boxShadow","flexDirection","overflow","transition","justifyContent","alignItems","padding","ref","flex","overflowY","map","msg","index","role","content","type","value","onChange","e","target","placeholder","marginRight","_c","$RefreshReg$"],"sources":["/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const eventSourceRef = useRef(null); \n  const chatContainerRef = useRef(null);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    // ... (your existing message-sending logic)\n  };\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  const clearMessages = () => {\n    setMessages([]);\n    setStreamingResponse(\"\");\n    setIsTyping(false);\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n  };\n\n  return (\n    <div\n      className=\"chatbot-wrapper\"\n      style={{ width: \"350px\", position: \"relative\" }} // Ensure wrapper is positioned normally\n    >\n      {!isOpen && (\n        <button\n          className=\"chat-button\"\n          onClick={() => setIsOpen(true)}\n          style={{\n            display: \"block\",\n            width: \"100%\",\n            marginBottom: \"10px\",\n            position: \"static\", // Remove absolute positioning\n          }}\n        >\n          ðŸ’¬ Chat with me\n        </button>\n      )}\n\n      {isOpen && (\n        <div\n          className=\"chat-container show-chat\"\n          style={{\n            width: \"350px\",\n            height: \"500px\",\n            background: \"white\",\n            borderRadius: \"15px\",\n            boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.2)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflow: \"hidden\",\n            transition: \"all 0.3s ease-in-out\",\n            position: \"static\", // Ensure this follows normal flow\n          }}\n        >\n          <div\n            className=\"chat-header\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              padding: \"10px\",\n            }}\n          >\n            <h2>Chat with me</h2>\n            <button className=\"close-btn\" onClick={() => setIsOpen(false)}>\n              âœ–\n            </button>\n          </div>\n\n          <div\n            className=\"chatbox\"\n            ref={chatContainerRef}\n            style={{ flex: 1, overflowY: \"auto\", padding: \"10px\" }}\n          >\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={msg.role === \"user\" ? \"user-message\" : \"bot-message\"}\n              >\n                {msg.content}\n              </div>\n            ))}\n            {streamingResponse && (\n              <div className=\"bot-message\">{streamingResponse}</div>\n            )}\n            {isTyping && (\n              <div className=\"bot-typing\">\n                <div className=\"typing-indicator\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div\n            className=\"chat-input\"\n            style={{ display: \"flex\", padding: \"10px\" }}\n          >\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Ask me anything...\"\n              style={{ flex: 1, marginRight: \"5px\" }}\n            />\n            <button className=\"send\" onClick={sendMessage}>\n              Send\n            </button>\n            <button className=\"clear\" onClick={clearMessages}>\n              Clear\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}