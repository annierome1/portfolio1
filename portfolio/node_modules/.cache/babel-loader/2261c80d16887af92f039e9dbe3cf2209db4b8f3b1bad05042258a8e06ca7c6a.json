{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/skillItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { skills } from \"../data\"; // Import categorized skills\nimport { motion } from \"framer-motion\";\nimport { useDrag } from \"react-use-gesture\";\nimport skillIcons from \"./skillIcons\"; // Map skill names to icons\n\n// Convert skills data to a tree structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SkillWheel() {\n  _s();\n  const categories = Object.keys(skills);\n  const [selectedCategory, setSelectedCategory] = useState(categories[0]);\n  const categorySkills = skills[selectedCategory];\n\n  // Handle drag-based rotation\n  const [rotation, setRotation] = useState(0);\n  const bind = useDrag(({\n    movement: [mx]\n  }) => {\n    setRotation(prev => prev + mx * 0.5);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center space-x-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-3\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCategory(category),\n        className: `px-4 py-2 text-white font-medium rounded-md transition duration-300 ${selectedCategory === category ? \"bg-blue-500\" : \"bg-gray-700 hover:bg-gray-500\"}`,\n        children: category\n      }, category, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...bind(),\n      className: \"relative w-60 h-60 rounded-full border-2 border-gray-500 flex items-center justify-center\",\n      children: categorySkills.map((skill, index) => {\n        const angle = 360 / categorySkills.length * index;\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"absolute w-12 h-12 flex items-center justify-center bg-gray-800 rounded-full shadow-lg\",\n          style: {\n            transform: `rotate(${rotation + angle}deg) translate(100px) rotate(-${rotation + angle}deg)`\n          },\n          children: skillIcons[skill.name] || /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-white text-xs\",\n            children: skill.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 44\n          }, this)\n        }, skill.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_s(SkillWheel, \"aKu33wJifxtQFhqUvZ2d/7Tu7vY=\", false, function () {\n  return [useDrag];\n});\n_c = SkillWheel;\nvar _c;\n$RefreshReg$(_c, \"SkillWheel\");","map":{"version":3,"names":["React","useState","skills","motion","useDrag","skillIcons","jsxDEV","_jsxDEV","SkillWheel","_s","categories","Object","keys","selectedCategory","setSelectedCategory","categorySkills","rotation","setRotation","bind","movement","mx","prev","className","children","map","category","onClick","fileName","_jsxFileName","lineNumber","columnNumber","skill","index","angle","length","div","style","transform","name","_c","$RefreshReg$"],"sources":["/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/skillItem.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { skills } from \"../data\"; // Import categorized skills\nimport { motion } from \"framer-motion\";\nimport { useDrag } from \"react-use-gesture\";\nimport skillIcons from \"./skillIcons\"; // Map skill names to icons\n\n\n// Convert skills data to a tree structure\nexport default function SkillWheel() {\n    const categories = Object.keys(skills);\n    const [selectedCategory, setSelectedCategory] = useState(categories[0]);\n    const categorySkills = skills[selectedCategory];\n  \n    // Handle drag-based rotation\n    const [rotation, setRotation] = useState(0);\n    const bind = useDrag(({ movement: [mx] }) => {\n      setRotation((prev) => prev + mx * 0.5);\n    });\n  \n    return (\n      <div className=\"flex justify-center items-center space-x-8\">\n        {/* Sidebar for Categories */}\n        <div className=\"flex flex-col space-y-3\">\n          {categories.map((category) => (\n            <button\n              key={category}\n              onClick={() => setSelectedCategory(category)}\n              className={`px-4 py-2 text-white font-medium rounded-md transition duration-300 ${\n                selectedCategory === category ? \"bg-blue-500\" : \"bg-gray-700 hover:bg-gray-500\"\n              }`}\n            >\n              {category}\n            </button>\n          ))}\n        </div>\n  \n        {/* Rotating Skill Icons */}\n        <div {...bind()} className=\"relative w-60 h-60 rounded-full border-2 border-gray-500 flex items-center justify-center\">\n          {categorySkills.map((skill, index) => {\n            const angle = (360 / categorySkills.length) * index;\n            return (\n              <motion.div\n                key={skill.name}\n                className=\"absolute w-12 h-12 flex items-center justify-center bg-gray-800 rounded-full shadow-lg\"\n                style={{\n                  transform: `rotate(${rotation + angle}deg) translate(100px) rotate(-${rotation + angle}deg)`,\n                }}\n              >\n                {skillIcons[skill.name] || <span className=\"text-white text-xs\">{skill.name}</span>}\n              </motion.div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,SAAS,CAAC,CAAC;AAClC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;;AAGvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACV,MAAM,CAAC;EACtC,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAACS,UAAU,CAAC,CAAC,CAAC,CAAC;EACvE,MAAMK,cAAc,GAAGb,MAAM,CAACW,gBAAgB,CAAC;;EAE/C;EACA,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMiB,IAAI,GAAGd,OAAO,CAAC,CAAC;IAAEe,QAAQ,EAAE,CAACC,EAAE;EAAE,CAAC,KAAK;IAC3CH,WAAW,CAAEI,IAAI,IAAKA,IAAI,GAAGD,EAAE,GAAG,GAAG,CAAC;EACxC,CAAC,CAAC;EAEF,oBACEb,OAAA;IAAKe,SAAS,EAAC,4CAA4C;IAAAC,QAAA,gBAEzDhB,OAAA;MAAKe,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCb,UAAU,CAACc,GAAG,CAAEC,QAAQ,iBACvBlB,OAAA;QAEEmB,OAAO,EAAEA,CAAA,KAAMZ,mBAAmB,CAACW,QAAQ,CAAE;QAC7CH,SAAS,EAAE,uEACTT,gBAAgB,KAAKY,QAAQ,GAAG,aAAa,GAAG,+BAA+B,EAC9E;QAAAF,QAAA,EAEFE;MAAQ,GANJA,QAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNvB,OAAA;MAAA,GAASW,IAAI,CAAC,CAAC;MAAEI,SAAS,EAAC,2FAA2F;MAAAC,QAAA,EACnHR,cAAc,CAACS,GAAG,CAAC,CAACO,KAAK,EAAEC,KAAK,KAAK;QACpC,MAAMC,KAAK,GAAI,GAAG,GAAGlB,cAAc,CAACmB,MAAM,GAAIF,KAAK;QACnD,oBACEzB,OAAA,CAACJ,MAAM,CAACgC,GAAG;UAETb,SAAS,EAAC,wFAAwF;UAClGc,KAAK,EAAE;YACLC,SAAS,EAAE,UAAUrB,QAAQ,GAAGiB,KAAK,iCAAiCjB,QAAQ,GAAGiB,KAAK;UACxF,CAAE;UAAAV,QAAA,EAEDlB,UAAU,CAAC0B,KAAK,CAACO,IAAI,CAAC,iBAAI/B,OAAA;YAAMe,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAEQ,KAAK,CAACO;UAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GAN9EC,KAAK,CAACO,IAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOL,CAAC;MAEjB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CA/CqBD,UAAU;EAAA,QAOjBJ,OAAO;AAAA;AAAAmC,EAAA,GAPA/B,UAAU;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}