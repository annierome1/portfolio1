{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const chatContainerRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setStreamingResponse(\"\");\n    try {\n      /* const API_BASE_URL = \"https://chatbotannie-production.up.railway.app\"; */\n      const API_BASE_URL = \"http://0.0.0.0:8006\";\n      const response = await fetch(`${API_BASE_URL}/chat`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input,\n          session_id: \"session_123\"\n        })\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder(\"utf-8\");\n      let botMessage = {\n        role: \"bot\",\n        content: \"\"\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value, {\n          stream: true\n        });\n        const cleanChunk = chunk.split(\"\\n\").map(line => line.replace(/^data /, \"\").trim()).join(\" \");\n        botMessage.content += chunk;\n        setMessages(prev => [...prev.slice(0, -1), botMessage]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setInput(\"\"); // Clear input field\n  };\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const clearMessages = () => {\n    setMessages([]);\n    setStreamingResponse(\"\");\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-800 mb-4 text-center\",\n      children: \"Ask me anything!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      ref: chatContainerRef,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.role === \"user\" ? \"user-message\" : \"bot-message\",\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message\",\n        children: streamingResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask me anything...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear\",\n        onClick: clearMessages,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"u68ef/NBhi/H/b1bAgsXSimpREM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","streamingResponse","setStreamingResponse","chatContainerRef","sendMessage","trim","userMessage","role","content","prev","API_BASE_URL","response","fetch","method","headers","body","JSON","stringify","message","session_id","reader","getReader","decoder","TextDecoder","botMessage","prevMessages","value","done","read","chunk","decode","stream","cleanChunk","split","map","line","replace","join","slice","error","console","current","scrollTop","scrollHeight","clearMessages","eventSourceRef","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","msg","index","type","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState (false);\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  \n  const chatContainerRef = useRef(null);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { role: \"user\", content: input };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput(\"\");\n    setStreamingResponse(\"\");\n\n\n    try {\n\n       /* const API_BASE_URL = \"https://chatbotannie-production.up.railway.app\"; */\n        const API_BASE_URL = \"http://0.0.0.0:8006\"\n\n\n        const response = await fetch(`${API_BASE_URL}/chat`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ message: input, session_id: \"session_123\" }),\n        });\n\n  \n        const reader = response.body.getReader();\n        const decoder = new TextDecoder(\"utf-8\");\n        let botMessage = { role: \"bot\", content: \"\" };\n        \n        setMessages((prevMessages) => [... prevMessages, botMessage]);\n        \n        while (true) {\n          const { value, done } = await reader.read();\n          if (done) break;\n  \n          const chunk = decoder.decode(value, { stream: true });\n\n          const cleanChunk = chunk\n            .split(\"\\n\")\n            .map(line => line.replace(/^data /, \"\").trim())\n            .join(\" \");\n        \n          botMessage.content += chunk;\n  \n          setMessages((prev) => [...prev.slice(0, -1), botMessage]); \n        }\n  \n        \n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n  \n      setInput(\"\"); // Clear input field\n    };\n\n    useEffect(() => {\n        if (chatContainerRef.current) {\n          chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n        }\n      }, [messages]);  \n\n\n  const clearMessages = () => {\n    setMessages([]); \n    setStreamingResponse(\"\"); \n    if (eventSourceRef.current) {\n      eventSourceRef.current.close(); \n      eventSourceRef.current = null;\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Ask me anything!</h2>\n      <div className=\"chatbox\" ref={chatContainerRef}>\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.role === \"user\" ? \"user-message\" : \"bot-message\"}>\n            {msg.content}\n            \n          </div>\n        ))}\n        {streamingResponse && <div className=\"bot-message\">{streamingResponse}</div>}\n      </div>\n\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Ask me anything...\"\n        />\n        <button className=\"send\" onClick={sendMessage}>Send</button>\n        <button className=\"clear\" onClick={clearMessages}>Clear</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}