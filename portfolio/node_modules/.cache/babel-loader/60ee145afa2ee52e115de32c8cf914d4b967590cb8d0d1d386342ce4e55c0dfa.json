{"ast":null,"code":"var _jsxFileName = \"/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const eventSourceRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setIsExpanded(true);\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setStreamingResponse(\"\");\n    setIsTyping(true);\n    try {\n      /* const API_BASE_URL = \"https://chatbotannie-production.up.railway.app\"; */\n      const API_BASE_URL = \"http://0.0.0.0:8006\";\n      const response = await fetch(`${API_BASE_URL}/chat`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input,\n          session_id: \"session_123\"\n        })\n      });\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder(\"utf-8\");\n      let botMessage = {\n        role: \"bot\",\n        content: \"\"\n      };\n      let firstChunk = true;\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n      while (true) {\n        const {\n          value,\n          done\n        } = await reader.read();\n        if (done) break;\n        const chunk = decoder.decode(value, {\n          stream: true\n        });\n        const cleanChunk = chunk.split(\"\\n\").map(line => line.replace(/^data /, \"\").trim()).join(\" \");\n        if (firstChunk) {\n          setIsTyping(false);\n          firstChunk = false;\n        }\n        botMessage.content += chunk;\n        setMessages(prev => [...prev.slice(0, -1), botMessage]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n    setInput(\"\"); // Clear input field\n  };\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [messages]);\n  const clearMessages = () => {\n    setMessages([]);\n    setStreamingResponse(\"\");\n    setIsTyping(false);\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-container ${isExpanded ? \"expanded\" : \"collapsed\"}`,\n    children: [isExpanded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800 mb-4 text-center\",\n        children: \"Ask me anything!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox\",\n        ref: chatContainerRef,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.role === \"user\" ? \"user-message\" : \"bot-message\",\n          children: msg.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)), streamingResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-message\",\n          children: streamingResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 31\n        }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot-typing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => {\n          setInput(e.target.value);\n          setIsExpanded(true); // Expand when user starts typing\n        },\n        placeholder: \"Ask me anything...\",\n        onFocus: () => setIsExpanded(true) // Expand when input is clicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear\",\n        onClick: clearMessages,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"minimize\",\n        onClick: () => setIsExpanded(false),\n        children: \"Minimize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"3kr7BjWoVReh8uP4RJeArIoV3xI=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","isExpanded","setIsExpanded","streamingResponse","setStreamingResponse","eventSourceRef","chatContainerRef","sendMessage","trim","userMessage","role","content","prev","API_BASE_URL","response","fetch","method","headers","body","JSON","stringify","message","session_id","reader","getReader","decoder","TextDecoder","botMessage","firstChunk","prevMessages","value","done","read","chunk","decode","stream","cleanChunk","split","map","line","replace","join","slice","error","console","current","scrollTop","scrollHeight","clearMessages","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","msg","index","type","onChange","e","target","placeholder","onFocus","onClick","_c","$RefreshReg$"],"sources":["/Users/annierome/Documents/GitHub/portfolio1/portfolio/src/components/chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./chatbot.css\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [streamingResponse, setStreamingResponse] = useState(\"\");\n  const eventSourceRef = useRef(null); \n  const chatContainerRef = useRef(null);\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setIsExpanded(true);\n\n    const userMessage = { role: \"user\", content: input };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput(\"\");\n    setStreamingResponse(\"\");\n    setIsTyping(true);\n\n\n    try {\n\n       /* const API_BASE_URL = \"https://chatbotannie-production.up.railway.app\"; */\n        const API_BASE_URL = \"http://0.0.0.0:8006\"\n\n\n        const response = await fetch(`${API_BASE_URL}/chat`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ message: input, session_id: \"session_123\" }),\n        });\n\n  \n        const reader = response.body.getReader();\n        const decoder = new TextDecoder(\"utf-8\");\n        let botMessage = { role: \"bot\", content: \"\" };\n        let firstChunk = true;\n        setMessages((prevMessages) => [... prevMessages, botMessage]);\n        \n        while (true) {\n            \n          const { value, done } = await reader.read();\n          if (done) break;\n  \n          const chunk = decoder.decode(value, { stream: true });\n\n          const cleanChunk = chunk\n            .split(\"\\n\")\n            .map(line => line.replace(/^data /, \"\").trim())\n            .join(\" \");\n\n            if (firstChunk) {\n                setIsTyping(false);\n                firstChunk = false;\n              }\n\n            \n          botMessage.content += chunk;\n  \n          setMessages((prev) => [...prev.slice(0, -1), botMessage]); \n        }\n  \n        \n      } catch (error) {\n        console.error(\"Error:\", error);\n      } \n  \n      setInput(\"\"); // Clear input field\n    };\n\n    useEffect(() => {\n        if (chatContainerRef.current) {\n          chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n        }\n      }, [messages]);  \n\n\n  const clearMessages = () => {\n    setMessages([]); \n    setStreamingResponse(\"\"); \n    setIsTyping(false);\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close(); \n      eventSourceRef.current = null;\n    }\n  };\n\n  return (\n    <div className={`chat-container ${isExpanded ? \"expanded\" : \"collapsed\"}`}>\n      {isExpanded && (\n        <>\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4 text-center\">Ask me anything!</h2>\n      <div className=\"chatbox\" ref={chatContainerRef}>\n        {messages.map((msg, index) => (\n          <div key={index} className={msg.role === \"user\" ? \"user-message\" : \"bot-message\"}>\n            {msg.content}\n            \n          </div>\n        ))}\n        {streamingResponse && <div className=\"bot-message\">{streamingResponse}</div>}\n        {isTyping && (\n            <div className = \"bot-typing\">\n                <div className = \"typing-indicator\">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </div>\n                </div>\n        )}\n      </div>\n      </>\n      )}\n\n<div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => {\n            setInput(e.target.value);\n            setIsExpanded(true); // Expand when user starts typing\n          }}\n          placeholder=\"Ask me anything...\"\n          onFocus={() => setIsExpanded(true)} // Expand when input is clicked\n        />\n        <button className=\"send\" onClick={sendMessage}>Send</button>\n        <button className=\"clear\" onClick={clearMessages}>Clear</button>\n        {isExpanded && (\n          <button className=\"minimize\" onClick={() => setIsExpanded(false)}>Minimize</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}